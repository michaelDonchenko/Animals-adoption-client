{"version":3,"sources":["components/navigation/styles.ts","redux/api/auth.ts","redux/actions/authActions.ts","redux/reducers/auth.ts","components/navigation/NavBar.tsx","components/routes/PrivateRoute.tsx","components/post-card/styles.ts","components/post-card/PostCard.tsx","pages/adoption/styles.ts","redux/api/post.ts","redux/actions/postActions.ts","redux/reducers/post.ts","components/filters/styles.ts","components/filters/Filters.tsx","pages/adoption/Adoption.tsx","pages/adoption/AdoptionPost.tsx","pages/auth/styles.ts","components/forms/LoginForm.tsx","pages/auth/Login.tsx","components/forms/RegisterForm.tsx","pages/auth/Register.tsx","components/create-post-form/styles.ts","components/create-post-form/CreatePost.tsx","pages/dashboard/styles.ts","components/table-component/styles.ts","components/table-component/TableComponent.tsx","components/update-post-form/styles.ts","components/update-post-form/UpdateForm.tsx","pages/dashboard/Dashboard.tsx","redux/api/cloudinary.ts","redux/actions/cloudinaryActions.ts","redux/reducers/cloudinary.ts","components/create-post-form/UploadImageForm.tsx","pages/dashboard/UploadImages.tsx","images/cat2.jpg","images/dog2.jpg","pages/home/styles.ts","pages/home/Home.tsx","styles/styles.ts","App.tsx","styles/theme.ts","redux/store.ts","index.tsx"],"names":["styles","makeStyles","theme","appBar","backgroundColor","toolBar","maxWidth","width","margin","flexDiv","display","flexGrow","navLink","color","textDecoration","marginRight","spacing","axios","defaults","withCredentials","server_url","process","loginUser","obj","a","post","registerUser","logoutUser","cookies","Cookies","login","createAsyncThunk","rejectWithValue","data","set","user","response","register","logout","remove","initialState","get","loading","error","message","authSlice","createSlice","name","reducers","resetMessage","state","payload","resetError","forceLogout","action","extraReducers","builder","addCase","pending","fulfilled","rejected","errors","msg","actions","authState","auth","active","NavBar","classes","useSelector","history","useHistory","useState","anchorEl","setAnchorEl","handleClose","text","push","AppBar","className","position","Toolbar","Hidden","smUp","IconButton","style","Typography","onClick","event","currentTarget","variant","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","xsDown","exact","to","activeStyle","PrivateRoute","Component","component","rest","render","props","main","border","minHeight","padding","flexDirection","photo","alignSelf","maxHeight","male","fontWeight","fontSize","female","age","marginLeft","flexGrow1","link","justifyContent","PostCard","gender","image","Paper","src","alt","alignItems","flexWrap","header","paddingTop","flexCenterDiv","postContainer","img","paginationDiv","createPost","fetchPosts","query","type","location","size","adopted","page","order","fetchPost","postId","fetchPostsByUser","update","put","destroyPost","delete","newPost","getPosts","getPostsByUser","getPost","getPostToUpdate","updatePost","deletePost","createdPost","postToUpdate","posts","postsByUser","count","undefined","pages","queryObj","postSlice","cleanPostSuccess","setQueryType","setQueryPage","setQueryObject","resetFilters","resetPostToUpdate","cleanMessage","rows","postState","FiltersContainer","marign","textField","Filters","dispatch","useDispatch","values","setValues","handleChange","e","target","value","useEffect","align","onSubmit","preventDefault","FormControl","InputLabel","Select","onChange","labelId","disabled","Button","Adoption","length","map","p","i","images","url","Pagination","AdoptionPost","params","useParams","elevation","Grid","container","md","sm","item","showArrows","phone","sterilized_or_castrated","immune","about","paper","marginTop","form","submit","LoginForm","showError","email","password","handleSubmit","noValidate","TextField","required","fullWidth","label","autoComplete","autoFocus","xs","Login","Container","RegisterForm","showMessage","setTimeout","Regiter","title","CreatePost","laoding","multiline","header1","subHeader","cursor","imagesUplaodContainer","table","TableComponent","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","TableBody","moment","createdAt","format","window","confirm","UpdatePost","Dashboard","setPage","split","uploadImages","addImages","cloudinarySlice","cleanCloudinarySuccess","cloudinaryState","cloudinary","UploadImageForm","files","setFiles","dispatchImageUpload","uri","Resizer","imageFileResizer","accept","multiple","showSuccess","UploadImages","desktopImg","height","mobileImg","gridItem","Text","Home","innerWidth","setWidth","handleResize","handleClick","addEventListener","removeEventListener","dog","cat","App","path","Register","createMuiTheme","palette","primary","configureStore","reducer","ReactDOM","store","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.77395e82.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  appBar: {\r\n    backgroundColor: '#663399',\r\n  },\r\n\r\n  toolBar: {\r\n    maxWidth: '100%',\r\n    width: '1280px',\r\n    margin: '0 auto',\r\n  },\r\n\r\n  flexDiv: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n  },\r\n\r\n  navLink: {\r\n    color: '#FFFAF0',\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n\r\n  marginRight: {\r\n    marginRight: theme.spacing(3),\r\n  },\r\n}))\r\n\r\nexport default styles\r\n","import axios from 'axios'\r\naxios.defaults.withCredentials = true\r\nconst server_url = process.env.REACT_APP_SERVER_URL\r\n\r\ninterface authProps {\r\n  email: string\r\n  password: string\r\n}\r\n\r\nexport const loginUser = async (obj: authProps) =>\r\n  await axios.post(`${server_url}/login`, obj)\r\n\r\nexport const registerUser = async (obj: authProps) =>\r\n  await axios.post(`${server_url}/register`, obj)\r\n\r\nexport const logoutUser = async () => await axios.post(`${server_url}/logout`)\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { loginUser, logoutUser, registerUser } from '../api/auth'\r\nimport Cookies from 'universal-cookie'\r\n\r\nconst cookies = new Cookies()\r\n\r\ninterface authProps {\r\n  email: string\r\n  password: string\r\n}\r\n\r\nexport const login = createAsyncThunk(\r\n  'auth/login',\r\n  async (obj: authProps, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await loginUser(obj)\r\n      cookies.set('user', data.user)\r\n\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async (obj: authProps, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await registerUser(obj)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const logout = createAsyncThunk(\r\n  'auth/logout',\r\n  async (obj, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await logoutUser()\r\n      cookies.remove('user')\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport Cookies from 'universal-cookie'\r\nimport { login, logout, register } from '../actions/authActions'\r\n\r\nconst cookies = new Cookies()\r\n\r\ninterface stateProps {\r\n  user: null | string\r\n  loading: boolean\r\n  error: null | string\r\n  message: null | string\r\n}\r\n\r\nconst initialState: stateProps = {\r\n  user: cookies.get('user') ? cookies.get('user') : null,\r\n  loading: false,\r\n  error: null,\r\n  message: null,\r\n}\r\n\r\nexport const authSlice: any = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    resetMessage: (state, { payload }) => {\r\n      state.message = null\r\n    },\r\n    resetError: (state, { payload }) => {\r\n      state.error = null\r\n    },\r\n    forceLogout: (state, action) => {\r\n      state.user = null\r\n      state.error = null\r\n      cookies.remove('user')\r\n      cookies.remove('token')\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      //login\r\n      .addCase(login.pending, (state, { payload }) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(login.fulfilled, (state, { payload }) => {\r\n        state.loading = false\r\n        state.user = payload.user\r\n        state.message = payload.message\r\n        state.error = null\r\n      })\r\n      .addCase(login.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.error = action.payload.errors[0].msg)\r\n          : (state.error = action.payload.message)\r\n      })\r\n      //logout\r\n      .addCase(logout.pending, (state, { payload }) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(logout.fulfilled, (state, { payload }) => {\r\n        state.loading = false\r\n        state.user = null\r\n        state.error = null\r\n      })\r\n      .addCase(logout.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.error = action.payload.errors[0].msg)\r\n          : (state.error = action.payload.message)\r\n      })\r\n      //register\r\n      .addCase(register.pending, (state, { payload }) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(register.fulfilled, (state, { payload }) => {\r\n        state.loading = false\r\n        state.message = payload.message\r\n        state.error = null\r\n      })\r\n      .addCase(register.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.error = action.payload.errors[0].msg)\r\n          : (state.error = action.payload.message)\r\n      })\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { resetMessage, resetError, forceLogout } = authSlice.actions\r\n\r\nexport const authState = (state: any) => state.auth\r\n\r\nexport default authSlice.reducer\r\n","import {\r\n  AppBar,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n  Hidden,\r\n  Menu,\r\n  MenuItem,\r\n} from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport styles from './styles'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { authState } from '../../redux/reducers/auth'\r\nimport { useState } from 'react'\r\n\r\nconst active = {\r\n  textDecoration: 'underline',\r\n}\r\n\r\nconst NavBar = () => {\r\n  const classes = styles()\r\n  const { user } = useSelector(authState)\r\n  const history = useHistory()\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handleClose = (text: string) => {\r\n    setAnchorEl(null)\r\n    history.push(text)\r\n  }\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position='static'>\r\n      <Toolbar className={classes.toolBar}>\r\n        <Hidden smUp>\r\n          <IconButton className={classes.navLink}>\r\n            <MenuIcon style={{ margin: '0 5px' }} />\r\n            <Typography onClick={handleClick} variant='h6'>\r\n              Menu\r\n            </Typography>\r\n          </IconButton>\r\n\r\n          <Menu\r\n            id='simple-menu'\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={() => handleClose('/')}>Home</MenuItem>\r\n            <MenuItem onClick={() => handleClose('/adoption')}>\r\n              Adoption\r\n            </MenuItem>\r\n\r\n            {user ? (\r\n              <MenuItem onClick={() => handleClose(`/dashboard/${user.id}`)}>\r\n                User Dashboard\r\n              </MenuItem>\r\n            ) : (\r\n              <MenuItem onClick={() => handleClose(`/login`)}>Login</MenuItem>\r\n            )}\r\n          </Menu>\r\n        </Hidden>\r\n\r\n        <Hidden xsDown>\r\n          <div className={classes.flexDiv}>\r\n            <NavLink\r\n              exact\r\n              to='/'\r\n              className={classes.navLink}\r\n              activeStyle={active}\r\n            >\r\n              <Typography className={classes.marginRight} variant='h6'>\r\n                Home\r\n              </Typography>\r\n            </NavLink>\r\n            <NavLink\r\n              to='/adoption'\r\n              className={classes.navLink}\r\n              activeStyle={active}\r\n            >\r\n              <Typography variant='h6' className={classes.marginRight}>\r\n                Adoption\r\n              </Typography>\r\n            </NavLink>\r\n          </div>\r\n\r\n          {!user ? (\r\n            <NavLink\r\n              to='/login'\r\n              className={classes.navLink}\r\n              activeStyle={active}\r\n            >\r\n              <Typography variant='h6'>Login</Typography>\r\n            </NavLink>\r\n          ) : (\r\n            <NavLink\r\n              to={`/dashboard/${user.id}`}\r\n              className={classes.navLink}\r\n              activeStyle={active}\r\n            >\r\n              <Typography variant='h6'>User dashboard</Typography>\r\n            </NavLink>\r\n          )}\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { authState } from '../../redux/reducers/auth'\r\nimport Cookies from 'universal-cookie'\r\n\r\ninterface RouteProps {\r\n  component: React.ComponentType<any>\r\n  path: string\r\n  exact: boolean\r\n}\r\n\r\nconst PrivateRoute: React.FC<RouteProps> = ({\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  const { user } = useSelector(authState)\r\n  const cookies = new Cookies()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !user || !cookies.get('user') ? (\r\n          <Redirect to='/login' />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  main: {\r\n    border: '2px solid white',\r\n    width: '300px',\r\n    maxWidth: '95%',\r\n    margin: theme.spacing(3),\r\n    minHeight: '350px',\r\n    padding: '7px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '&:hover': {\r\n      border: '2px solid #663399',\r\n    },\r\n  },\r\n\r\n  photo: {\r\n    width: 'auto',\r\n    maxWidth: '95%',\r\n    alignSelf: 'center',\r\n    maxHeight: '350px',\r\n  },\r\n\r\n  name: {\r\n    margin: '10px 0',\r\n    color: '#663399',\r\n  },\r\n\r\n  male: {\r\n    color: '#00BFFF',\r\n    fontWeight: 500,\r\n    fontSize: '18px',\r\n    marginRight: '7px',\r\n  },\r\n\r\n  female: {\r\n    color: '#FF00FF',\r\n    fontWeight: 500,\r\n    fontSize: '18px',\r\n    marginRight: '7px',\r\n  },\r\n\r\n  age: {\r\n    backgroundColor: '#F8F8FF',\r\n    fontWeight: 500,\r\n    fontSize: '18px',\r\n    padding: '3px',\r\n    marginLeft: 'auto',\r\n  },\r\n\r\n  flexGrow1: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  link: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    textDecoration: 'none',\r\n    color: '#663399',\r\n  },\r\n}))\r\n\r\nexport default styles\r\n","import { Paper, Typography } from '@material-ui/core'\r\nimport { FC } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './styles'\r\n\r\ninterface IProps {\r\n  id: number\r\n  name: string\r\n  gender: string\r\n  age: number\r\n  image?: string\r\n}\r\n\r\nconst PostCard: FC<IProps> = ({ name, gender, age, image, id }) => {\r\n  const classes = styles()\r\n  return (\r\n    <Paper className={classes.main}>\r\n      <Link to={`/adoption/${id}`} className={classes.link}>\r\n        <img src={image} alt='img' className={classes.photo} />\r\n      </Link>\r\n\r\n      <div className={classes.flexGrow1}></div>\r\n      <Link to={`/adoption/${id}`} className={classes.link}>\r\n        <Typography className={classes.name} variant='h5'>\r\n          {name}\r\n        </Typography>\r\n      </Link>\r\n\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <span className={gender === 'male' ? classes.male : classes.female}>\r\n          {gender}\r\n        </span>\r\n        <span className={classes.age}>Age: {age === 0 ? '0 - 1' : age}</span>\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default PostCard\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  main: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  header: {\r\n    margin: '20px 0',\r\n    paddingTop: '15px',\r\n  },\r\n\r\n  flexCenterDiv: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n\r\n  postContainer: {\r\n    width: '960px',\r\n    maxWidth: '100%',\r\n    padding: '10px 5px',\r\n    margin: '20px auto',\r\n  },\r\n\r\n  img: {\r\n    width: '100%',\r\n    maxWidth: '450px',\r\n  },\r\n\r\n  paginationDiv: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n  },\r\n}))\r\n\r\nexport default styles\r\n","import axios from 'axios'\r\naxios.defaults.withCredentials = true\r\nconst server_url = process.env.REACT_APP_SERVER_URL\r\n\r\nexport interface postProps {\r\n  id?: number\r\n  name: string\r\n  age: number\r\n  type: string\r\n  location: string\r\n  gender: string\r\n  size: string\r\n  color: string\r\n  immune: boolean\r\n  sterilized_or_castrated: boolean\r\n  about: string\r\n  phone: number\r\n  adopted?: boolean\r\n}\r\n\r\nexport interface IQuery {\r\n  type?: string\r\n  location?: string\r\n  gender?: string\r\n  size?: string\r\n  adopted?: boolean\r\n  age: number\r\n  page: number\r\n  order?: string\r\n}\r\n\r\nexport const createPost = async (obj: postProps) =>\r\n  await axios.post(`${server_url}/create-post`, obj)\r\n\r\nexport const fetchPosts = async (query: IQuery) =>\r\n  await axios.get(\r\n    `${server_url}/posts?type=${query.type ? query.type : ''}&location=${\r\n      query.location ? query.location : ''\r\n    }&gender=${query.gender ? query.gender : ''}&size=${\r\n      query.size ? query.size : ''\r\n    }&adopted=${query.adopted ? query.adopted : ''}&age=${\r\n      query.age ? query.age : 100\r\n    }&page=${query.page}&order=${query.order ? query.order : ''}`\r\n  )\r\n\r\nexport const fetchPost = async (postId: string) =>\r\n  await axios.get(`${server_url}/post/${postId}`)\r\n\r\nexport const fetchPostsByUser = async (page: number) =>\r\n  await axios.get(`${server_url}/posts-by-user?page=${page}`)\r\n\r\nexport const update = async (obj: postProps) =>\r\n  await axios.put(`${server_url}/update-post?id=${obj.id}`, obj)\r\n\r\nexport const destroyPost = async (postId: string) =>\r\n  await axios.delete(`${server_url}/post/${postId}`)\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport {\r\n  createPost,\r\n  destroyPost,\r\n  fetchPost,\r\n  fetchPosts,\r\n  fetchPostsByUser,\r\n  update,\r\n} from '../api/post'\r\nimport { postProps, IQuery } from '../api/post'\r\n\r\nexport const newPost = createAsyncThunk(\r\n  'post/newPost',\r\n  async (obj: postProps, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await createPost(obj)\r\n\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const getPosts = createAsyncThunk(\r\n  'post/getPosts',\r\n  async (obj: IQuery, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await fetchPosts(obj)\r\n\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const getPostsByUser = createAsyncThunk(\r\n  'post/getPostsByUser',\r\n  async (page: number, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await fetchPostsByUser(page)\r\n\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const getPost = createAsyncThunk(\r\n  'post/getPost',\r\n  async (postId: string, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await fetchPost(postId)\r\n\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const getPostToUpdate = createAsyncThunk(\r\n  'post/getPostToUpdate',\r\n  async (postId: any, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await fetchPost(postId)\r\n\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const updatePost = createAsyncThunk(\r\n  'post/updatePost',\r\n  async (obj: postProps, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await update(obj)\r\n\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deletePost = createAsyncThunk(\r\n  'post/deletePost',\r\n  async (postId: string, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await destroyPost(postId)\r\n\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport {\r\n  getPost,\r\n  getPosts,\r\n  getPostsByUser,\r\n  newPost,\r\n  getPostToUpdate,\r\n  updatePost,\r\n  deletePost,\r\n} from '../actions/postActions'\r\n\r\ninterface stateProps {\r\n  post: null | object\r\n  createdPost: null | object\r\n  postToUpdate: null | object\r\n  posts: []\r\n  postsByUser: []\r\n  count: undefined | number\r\n  pages: undefined | number\r\n  loading: boolean\r\n  error: null | string\r\n  message: null | string\r\n  queryObj: {\r\n    age: number | null\r\n    type: string\r\n    location: string\r\n    gender: string\r\n    size: string\r\n    adopted: boolean | ''\r\n    page: number\r\n    order: string\r\n  }\r\n}\r\n\r\nconst initialState: stateProps = {\r\n  post: null,\r\n  createdPost: null,\r\n  postToUpdate: null,\r\n  posts: [],\r\n  postsByUser: [],\r\n  count: undefined,\r\n  pages: undefined,\r\n  loading: false,\r\n  error: null,\r\n  message: null,\r\n  queryObj: {\r\n    age: null,\r\n    type: '',\r\n    location: '',\r\n    gender: '',\r\n    size: '',\r\n    adopted: '',\r\n    page: 1,\r\n    order: '',\r\n  },\r\n}\r\n\r\nexport const postSlice: any = createSlice({\r\n  name: 'post',\r\n  initialState,\r\n  reducers: {\r\n    cleanPostSuccess: (state, { payload }) => {\r\n      state.createdPost = null\r\n      state.message = null\r\n    },\r\n    setQueryType: (state, action) => {\r\n      state.queryObj.type = action.payload\r\n    },\r\n    setQueryPage: (state, action) => {\r\n      state.queryObj.page = action.payload\r\n    },\r\n    setQueryObject: (state, action) => {\r\n      state.queryObj = action.payload\r\n    },\r\n    resetFilters: (state, action) => {\r\n      state.queryObj.age = null\r\n      state.queryObj.type = ''\r\n      state.queryObj.location = ''\r\n      state.queryObj.gender = ''\r\n      state.queryObj.size = ''\r\n      state.queryObj.adopted = ''\r\n      state.queryObj.page = 1\r\n    },\r\n    resetPostToUpdate: (state, action) => {\r\n      state.postToUpdate = null\r\n    },\r\n    cleanMessage: (state, action) => {\r\n      state.message = null\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      //new post\r\n      .addCase(newPost.pending, (state, { payload }) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(newPost.fulfilled, (state, { payload }) => {\r\n        state.loading = false\r\n        state.createdPost = payload.post\r\n        state.message = payload.message\r\n        state.error = null\r\n      })\r\n      .addCase(newPost.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.error = action.payload.errors[0].msg)\r\n          : (state.error = action.payload.message)\r\n      })\r\n      //get posts\r\n      .addCase(getPosts.pending, (state, { payload }) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(getPosts.fulfilled, (state, { payload }) => {\r\n        state.loading = false\r\n        state.posts = payload.posts.rows\r\n        state.count = payload.posts.count\r\n        state.pages = payload.pages\r\n        state.error = null\r\n      })\r\n      .addCase(getPosts.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.error = action.payload.errors[0].msg)\r\n          : (state.error = action.payload.message)\r\n      })\r\n      // get posts by user\r\n      .addCase(getPostsByUser.pending, (state, { payload }) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(getPostsByUser.fulfilled, (state, { payload }) => {\r\n        state.loading = false\r\n        state.postsByUser = payload.posts.rows\r\n        state.count = payload.posts.count\r\n        state.pages = payload.pages\r\n        state.error = null\r\n      })\r\n      .addCase(getPostsByUser.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.error = action.payload.errors[0].msg)\r\n          : action.payload === 'Unauthorized'\r\n          ? (state.error = action.payload)\r\n          : (state.error = action.payload.message)\r\n      })\r\n      //get single post\r\n      .addCase(getPost.pending, (state, { payload }) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(getPost.fulfilled, (state, { payload }) => {\r\n        state.loading = false\r\n        state.post = payload.post\r\n        state.error = null\r\n      })\r\n      .addCase(getPost.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.error = action.payload.errors[0].msg)\r\n          : (state.error = action.payload.message)\r\n      })\r\n      //get post to update\r\n      .addCase(getPostToUpdate.pending, (state, { payload }) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(getPostToUpdate.fulfilled, (state, { payload }) => {\r\n        state.loading = false\r\n        state.postToUpdate = payload.post\r\n        state.error = null\r\n      })\r\n      .addCase(\r\n        getPostToUpdate.rejected,\r\n        (state, action: PayloadAction<any>) => {\r\n          state.loading = false\r\n          action.payload.errors\r\n            ? (state.error = action.payload.errors[0].msg)\r\n            : (state.error = action.payload.message)\r\n        }\r\n      )\r\n      //update post\r\n      .addCase(updatePost.pending, (state, { payload }) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(updatePost.fulfilled, (state, { payload }) => {\r\n        state.loading = false\r\n        state.message = payload.message\r\n        state.error = null\r\n      })\r\n      .addCase(updatePost.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.error = action.payload.errors[0].msg)\r\n          : (state.error = action.payload.message)\r\n      })\r\n      //delete post\r\n      .addCase(deletePost.pending, (state, { payload }) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(deletePost.fulfilled, (state, { payload }) => {\r\n        state.loading = false\r\n        state.message = payload.message\r\n        state.error = null\r\n      })\r\n      .addCase(deletePost.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        action.payload.errors\r\n          ? (state.error = action.payload.errors[0].msg)\r\n          : (state.error = action.payload.message)\r\n      })\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n  cleanPostSuccess,\r\n  setQueryType,\r\n  setQueryPage,\r\n  resetFilters,\r\n  resetPostToUpdate,\r\n  setQueryObject,\r\n  cleanMessage,\r\n} = postSlice.actions\r\n\r\nexport const postState = (state: any) => state.post\r\n\r\nexport default postSlice.reducer\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  main: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    margin: '20px 0',\r\n  },\r\n\r\n  FiltersContainer: {\r\n    maxWidth: '100%',\r\n    width: '1280px',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    padding: '7px',\r\n    marign: '15px auto',\r\n  },\r\n\r\n  textField: {\r\n    width: '95%',\r\n    maxWidth: '300px',\r\n    margin: '15px',\r\n  },\r\n\r\n  header: {\r\n    paddingTop: '15px',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import {\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport { useEffect, useState } from 'react'\r\nimport { getPosts } from '../../redux/actions/postActions'\r\nimport styles from './styles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  postState,\r\n  resetFilters,\r\n  setQueryObject,\r\n} from '../../redux/reducers/post'\r\n\r\nconst Filters = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const { queryObj } = useSelector(postState)\r\n\r\n  const [values, setValues] = useState({\r\n    age: queryObj.age,\r\n    type: queryObj.type,\r\n    location: queryObj.location,\r\n    gender: queryObj.gender,\r\n    size: queryObj.size,\r\n    adopted: queryObj.adopted,\r\n    page: queryObj.page,\r\n    order: queryObj.order,\r\n  })\r\n\r\n  const { age, type, location, gender, size, adopted, order } = values\r\n\r\n  const handleChange = (e: any) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault()\r\n    dispatch(getPosts(values))\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setValues({\r\n      age: '',\r\n      type: '',\r\n      location: '',\r\n      gender: '',\r\n      size: '',\r\n      adopted: '',\r\n      page: queryObj.page,\r\n      order: '',\r\n    })\r\n    dispatch(resetFilters())\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(setQueryObject(values))\r\n  }, [values])\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <Paper style={{ maxWidth: '95%' }}>\r\n        <Typography variant='h5' align='center' className={classes.header}>\r\n          Search Filters\r\n        </Typography>\r\n\r\n        <form className={classes.FiltersContainer} onSubmit={handleSubmit}>\r\n          <FormControl className={classes.textField}>\r\n            <InputLabel id='type'>Pet Type</InputLabel>\r\n            <Select\r\n              onChange={handleChange}\r\n              value={type}\r\n              name='type'\r\n              labelId='type'\r\n            >\r\n              <MenuItem value='cat'>Cat</MenuItem>\r\n              <MenuItem value='dog'>Dog</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl className={classes.textField}>\r\n            <InputLabel id='location'>Adoption Location</InputLabel>\r\n            <Select\r\n              onChange={handleChange}\r\n              value={location}\r\n              name='location'\r\n              labelId='location'\r\n            >\r\n              <MenuItem value='north'>North</MenuItem>\r\n              <MenuItem value='center'>Center</MenuItem>\r\n              <MenuItem value='south'>South</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl className={classes.textField}>\r\n            <InputLabel id='gender'>Gender</InputLabel>\r\n            <Select\r\n              onChange={handleChange}\r\n              value={gender}\r\n              name='gender'\r\n              labelId='gender'\r\n            >\r\n              <MenuItem value='male'>Male</MenuItem>\r\n              <MenuItem value='female'>Female</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl className={classes.textField}>\r\n            <InputLabel id='size'>Size</InputLabel>\r\n            <Select\r\n              onChange={handleChange}\r\n              value={size}\r\n              name='size'\r\n              labelId='size'\r\n            >\r\n              <MenuItem value='small'>Small</MenuItem>\r\n              <MenuItem value='medium'>Medium</MenuItem>\r\n              <MenuItem value='large'>Large</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl className={classes.textField}>\r\n            <InputLabel id='adopted'>Already Adopted</InputLabel>\r\n            <Select\r\n              onChange={handleChange}\r\n              value={adopted}\r\n              name='adopted'\r\n              labelId='adopted'\r\n            >\r\n              <MenuItem disabled value=''>\r\n                Select\r\n              </MenuItem>\r\n              <MenuItem value='true'>Yes</MenuItem>\r\n              <MenuItem value='false'>No</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl className={classes.textField}>\r\n            <InputLabel id='age'>Age</InputLabel>\r\n            <Select\r\n              onChange={handleChange}\r\n              value={age}\r\n              name='age'\r\n              labelId='age'\r\n            >\r\n              <MenuItem value='0'>0 - 1</MenuItem>\r\n              <MenuItem value='1'>1</MenuItem>\r\n              <MenuItem value='2'>2</MenuItem>\r\n              <MenuItem value='3'>3</MenuItem>\r\n              <MenuItem value='4'>4+</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl className={classes.textField}>\r\n            <InputLabel id='order'>Order By</InputLabel>\r\n            <Select\r\n              onChange={handleChange}\r\n              value={order}\r\n              name='order'\r\n              labelId='order'\r\n            >\r\n              <MenuItem disabled value=''>\r\n                Select\r\n              </MenuItem>\r\n              <MenuItem value='createdAt desc'>\r\n                Created: newest posts (default)\r\n              </MenuItem>\r\n              <MenuItem value='createdAt asc'>Created: oldest posts</MenuItem>\r\n              <MenuItem value='age asc'>Age: young to old</MenuItem>\r\n              <MenuItem value='age desc'>Age: old to young</MenuItem>\r\n              <MenuItem value='name asc'>Name: sorting by name</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <Button\r\n            className={classes.textField}\r\n            variant='contained'\r\n            color='primary'\r\n            type='submit'\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n          <Button\r\n            variant='outlined'\r\n            color='secondary'\r\n            className={classes.textField}\r\n            onClick={handleReset}\r\n          >\r\n            Reset filters\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filters\r\n","import { useEffect } from 'react'\r\nimport PostCard from '../../components/post-card/PostCard'\r\nimport styles from './styles'\r\nimport { getPosts } from '../../redux/actions/postActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { postState, setQueryPage } from '../../redux/reducers/post'\r\nimport { Typography } from '@material-ui/core'\r\nimport Filters from '../../components/filters/Filters'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\n\r\nconst Adoption = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const { posts, pages, loading, error, queryObj } = useSelector(postState)\r\n\r\n  const handleChange = (e: any, value: number) => {\r\n    dispatch(setQueryPage(value))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getPosts(queryObj))\r\n  }, [queryObj.page])\r\n\r\n  return (\r\n    <>\r\n      <Filters />\r\n      <div className={classes.main}>\r\n        {loading && (\r\n          <Typography variant='h5' align='center' className={classes.header}>\r\n            Loading...\r\n          </Typography>\r\n        )}\r\n        {!loading &&\r\n          posts.length > 0 &&\r\n          posts.map((p: any, i: number) => (\r\n            <PostCard\r\n              id={p.id}\r\n              name={p.name}\r\n              age={p.age}\r\n              gender={p.gender}\r\n              image={p.images.length && p.images[0].url}\r\n              key={i}\r\n            />\r\n          ))}\r\n        {!loading && posts.length === 0 && (\r\n          <Typography variant='subtitle1' className={classes.header}>\r\n            No posts found\r\n          </Typography>\r\n        )}\r\n      </div>\r\n\r\n      {pages > 0 ? (\r\n        <div className={classes.paginationDiv}>\r\n          <Typography className={classes.header}>Page: </Typography>\r\n          <Pagination\r\n            count={pages}\r\n            page={queryObj.page}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Adoption\r\n","import { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getPost } from '../../redux/actions/postActions'\r\nimport { useParams } from 'react-router-dom'\r\nimport styles from './styles'\r\nimport { Grid, Paper, Typography } from '@material-ui/core'\r\nimport { postState } from '../../redux/reducers/post'\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css' // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel'\r\n\r\ninterface Iparams {\r\n  id: string\r\n}\r\n\r\nconst AdoptionPost = () => {\r\n  const dispatch = useDispatch()\r\n  const params: Iparams = useParams()\r\n  const classes = styles()\r\n  const { post, loading, error } = useSelector(postState)\r\n\r\n  useEffect(() => {\r\n    dispatch(getPost(params.id))\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.flexCenterDiv}>\r\n      {loading && (\r\n        <Typography variant='h5' align='center'>\r\n          Loading posts...\r\n        </Typography>\r\n      )}\r\n      {!loading && post && (\r\n        <Paper className={classes.postContainer} elevation={2}>\r\n          <Grid container>\r\n            <Grid\r\n              style={{ maxWidth: '100%', margin: '0 auto' }}\r\n              className={classes.flexCenterDiv}\r\n              md={6}\r\n              sm={12}\r\n              item\r\n            >\r\n              <Typography variant='h4' align='center'>\r\n                {post.name} , {post.age} ,{' '}\r\n                <span\r\n                  style={{\r\n                    color: post.gender === 'male' ? '#00BFFF' : '#FF00FF',\r\n                  }}\r\n                >\r\n                  {post.gender}\r\n                </span>\r\n              </Typography>\r\n\r\n              <div className={classes.flexCenterDiv}>\r\n                <Carousel showArrows={false}>\r\n                  {post.images.map((img: any) => (\r\n                    <img className={classes.img} src={img.url} />\r\n                  ))}\r\n                </Carousel>\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid md={6} sm={12} item style={{ padding: '7px' }}>\r\n              <Typography variant='h6'>Contact Info:</Typography>\r\n              <Typography variant='h6'>Phone: {post.phone}</Typography>\r\n              <hr></hr>\r\n\r\n              <p>Color: {post.color}</p>\r\n              <p>Pet's size: {post.size}</p>\r\n              <p>Adoptions location: {post.location}</p>\r\n              <p>\r\n                Sterilized or Castrated:{' '}\r\n                {post.sterilized_or_castrated === true ? 'Yes' : 'No'}\r\n              </p>\r\n              <p>Immuned: {post.immune === true ? 'Yes' : 'No'}</p>\r\n              <p>About me: {post.about}</p>\r\n              <p>\r\n                {post.adopted === true ? (\r\n                  <span style={{ color: 'red' }}>Already adopted</span>\r\n                ) : (\r\n                  <span style={{ color: 'green' }}>Avaliable for adoption</span>\r\n                )}\r\n              </p>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdoptionPost\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'black',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n}))\r\n\r\nexport default styles\r\n","import Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport styles from '../../pages/auth/styles'\r\nimport { useState, FC } from 'react'\r\nimport { login } from '../../redux/actions/authActions'\r\nimport { useDispatch } from 'react-redux'\r\n\r\ninterface Props {\r\n  user: null | {}\r\n  loading: boolean\r\n  error: null | string\r\n  message: null | string\r\n  showError: () => void\r\n}\r\n\r\nconst LoginForm: FC<Props> = ({ loading, error, showError }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = styles()\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n\r\n  const { email, password } = values\r\n\r\n  const handleChange = (e: any) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n    await dispatch(login(values))\r\n  }\r\n\r\n  return (\r\n    <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n      <TextField\r\n        variant='outlined'\r\n        margin='normal'\r\n        required\r\n        fullWidth\r\n        label='Email Address'\r\n        name='email'\r\n        autoComplete='email'\r\n        autoFocus\r\n        value={email}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        variant='outlined'\r\n        margin='normal'\r\n        required\r\n        fullWidth\r\n        name='password'\r\n        label='Password'\r\n        type='password'\r\n        autoComplete='current-password'\r\n        value={password}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      {showError()}\r\n\r\n      <Button\r\n        type='submit'\r\n        fullWidth\r\n        variant='contained'\r\n        color='primary'\r\n        className={classes.submit}\r\n      >\r\n        {loading ? 'Loading...' : 'Login'}\r\n      </Button>\r\n\r\n      <Grid container>\r\n        <Grid item xs>\r\n          <Link className={classes.link} to='/'>\r\n            Forgot password?\r\n          </Link>\r\n        </Grid>\r\n        <Grid item>\r\n          <Link className={classes.link} to='/register'>\r\n            {\"Don't have an account? Sign Up\"}\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\nimport styles from './styles'\r\nimport LoginForm from '../../components/forms/LoginForm'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { FC, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { authState, resetError } from '../../redux/reducers/auth'\r\n\r\nconst Login: FC = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = styles()\r\n  const auth = useSelector(authState)\r\n  const { loading, user, error, message } = auth\r\n  const history = useHistory()\r\n\r\n  const userCheck = () => {\r\n    if (user) {\r\n      history.push(`/dashboard/${user.id}`)\r\n    }\r\n  }\r\n\r\n  const showError = () => {\r\n    if (error) {\r\n      return <p style={{ margin: '10px 0', color: 'red' }}>{error}</p>\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return function cleanUp() {\r\n      dispatch(resetError())\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <div className={classes.paper}>\r\n        <Typography component='h1' variant='h5'>\r\n          Login\r\n        </Typography>\r\n\r\n        {userCheck()}\r\n\r\n        <LoginForm\r\n          user={user}\r\n          error={error}\r\n          loading={loading}\r\n          message={message}\r\n          showError={showError}\r\n        />\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport styles from '../../pages/auth/styles'\r\nimport { useState, FC } from 'react'\r\nimport { register } from '../../redux/actions/authActions'\r\nimport { useDispatch } from 'react-redux'\r\nimport { resetMessage } from '../../redux/reducers/auth'\r\n\r\ninterface Props {\r\n  user: null | {}\r\n  loading: boolean\r\n  error: null | string\r\n  message: null | string\r\n  showError: () => void\r\n  showMessage: () => void\r\n}\r\n\r\nconst RegisterForm: FC<Props> = ({\r\n  loading,\r\n  error,\r\n  showError,\r\n  message,\r\n  showMessage,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const classes = styles()\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n\r\n  const { email, password } = values\r\n\r\n  const handleChange = (e: any) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n    await dispatch(register(values))\r\n  }\r\n\r\n  if (message) {\r\n    setTimeout(() => dispatch(resetMessage()), 5000)\r\n  }\r\n\r\n  return (\r\n    <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n      <TextField\r\n        variant='outlined'\r\n        margin='normal'\r\n        required\r\n        fullWidth\r\n        value={email}\r\n        label='Email Address'\r\n        name='email'\r\n        autoComplete='email'\r\n        autoFocus\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        variant='outlined'\r\n        margin='normal'\r\n        required\r\n        fullWidth\r\n        name='password'\r\n        label='Password'\r\n        type='password'\r\n        value={password}\r\n        autoComplete='current-password'\r\n        onChange={handleChange}\r\n      />\r\n\r\n      {showError()}\r\n      {showMessage()}\r\n\r\n      <Button\r\n        type='submit'\r\n        fullWidth\r\n        variant='contained'\r\n        color='primary'\r\n        className={classes.submit}\r\n      >\r\n        {loading ? 'Loading...' : 'Register'}\r\n      </Button>\r\n\r\n      <Grid container>\r\n        <Grid item>\r\n          <Link className={classes.link} to='/login'>\r\n            {'Back to login'}\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default RegisterForm\r\n","import Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\nimport styles from './styles'\r\nimport RegisterForm from '../../components/forms/RegisterForm'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { authState, resetError } from '../../redux/reducers/auth'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\n\r\nexport default function Regiter() {\r\n  const dispatch = useDispatch()\r\n  const classes = styles()\r\n  const auth = useSelector(authState)\r\n  const { loading, user, error, message } = auth\r\n  const history = useHistory()\r\n\r\n  const userCheck = () => {\r\n    if (user) {\r\n      history.push(`/dashboard/${user.id}`)\r\n    }\r\n  }\r\n\r\n  const showError = () => {\r\n    if (error) {\r\n      return <p style={{ margin: '10px 0', color: 'red' }}>{error}</p>\r\n    }\r\n  }\r\n\r\n  const showMessage = () => {\r\n    if (message) {\r\n      return (\r\n        <p\r\n          style={{\r\n            margin: '10px 0',\r\n            color: 'green',\r\n          }}\r\n        >\r\n          {message}\r\n        </p>\r\n      )\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return function cleanUp() {\r\n      dispatch(resetError())\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <div className={classes.paper}>\r\n        <Typography component='h1' variant='h5'>\r\n          Register\r\n        </Typography>\r\n\r\n        {userCheck()}\r\n\r\n        <RegisterForm\r\n          user={user}\r\n          error={error}\r\n          loading={loading}\r\n          message={message}\r\n          showError={showError}\r\n          showMessage={showMessage}\r\n        />\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  textField: {\r\n    maxWidth: '95%',\r\n    width: '350px',\r\n    margin: '10px auto',\r\n  },\r\n\r\n  submit: {\r\n    margin: '15px auto',\r\n    width: '350px',\r\n    maxWidth: '95%',\r\n  },\r\n\r\n  title: {\r\n    margin: '20px 0',\r\n    color: '#663399',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import {\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport styles from './styles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useEffect, useState } from 'react'\r\nimport { newPost } from '../../redux/actions/postActions'\r\nimport { postState, cleanPostSuccess } from '../../redux/reducers/post'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst CreatePost = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const { createdPost, laoding } = useSelector(postState)\r\n\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    age: 0,\r\n    type: '',\r\n    location: '',\r\n    gender: '',\r\n    size: '',\r\n    color: '',\r\n    immune: false,\r\n    sterilized_or_castrated: false,\r\n    about: '',\r\n    phone: 0,\r\n  })\r\n\r\n  const {\r\n    name,\r\n    age,\r\n    type,\r\n    location,\r\n    gender,\r\n    size,\r\n    color,\r\n    immune,\r\n    sterilized_or_castrated,\r\n    about,\r\n    phone,\r\n  } = values\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault()\r\n    dispatch(newPost(values))\r\n  }\r\n\r\n  const handleChange = (e: any) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  if (createdPost && createdPost.id) {\r\n    history.push(`/dashboard/upload-image/${createdPost.id}`)\r\n  }\r\n\r\n  useEffect(() => {\r\n    return function cleanUp() {\r\n      dispatch(cleanPostSuccess())\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <TextField\r\n          className={classes.textField}\r\n          variant='standard'\r\n          margin='normal'\r\n          required\r\n          fullWidth\r\n          label={`Pet's name`}\r\n          name='name'\r\n          value={name}\r\n          autoFocus\r\n          type='text'\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <FormControl required className={classes.textField}>\r\n          <InputLabel id='type'>Select pet type</InputLabel>\r\n          <Select\r\n            onChange={handleChange}\r\n            value={type}\r\n            name='type'\r\n            labelId='type'\r\n          >\r\n            <MenuItem value='cat'>Cat</MenuItem>\r\n            <MenuItem value='dog'>Dog</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl required className={classes.textField}>\r\n          <InputLabel id='location'>Select adoption location</InputLabel>\r\n          <Select\r\n            value={location}\r\n            name='location'\r\n            onChange={handleChange}\r\n            labelId='location'\r\n          >\r\n            <MenuItem value='south'>South</MenuItem>\r\n            <MenuItem value='center'>Center</MenuItem>\r\n            <MenuItem value='north'>North</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField\r\n          className={classes.textField}\r\n          variant='standard'\r\n          margin='normal'\r\n          required\r\n          fullWidth\r\n          label={`Pet's age`}\r\n          name='age'\r\n          value={age}\r\n          type='number'\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <FormControl required className={classes.textField}>\r\n          <InputLabel id='gender'>Select pet gender</InputLabel>\r\n          <Select\r\n            name='gender'\r\n            value={gender}\r\n            onChange={handleChange}\r\n            labelId='gender'\r\n          >\r\n            <MenuItem value='male'>Male</MenuItem>\r\n            <MenuItem value='female'>Female</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl required className={classes.textField}>\r\n          <InputLabel id='location'>Select pet size</InputLabel>\r\n          <Select\r\n            name='size'\r\n            value={size}\r\n            onChange={handleChange}\r\n            labelId='location'\r\n          >\r\n            <MenuItem value='small'>small</MenuItem>\r\n            <MenuItem value='medium'>medium</MenuItem>\r\n            <MenuItem value='large'>large</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField\r\n          className={classes.textField}\r\n          variant='standard'\r\n          margin='normal'\r\n          required\r\n          fullWidth\r\n          label={`Pet's color`}\r\n          name='color'\r\n          type='text'\r\n          onChange={handleChange}\r\n          value={color}\r\n        />\r\n\r\n        <FormControl required className={classes.textField}>\r\n          <InputLabel id='immune'>Immune?</InputLabel>\r\n          <Select\r\n            name='immune'\r\n            value={immune}\r\n            onChange={handleChange}\r\n            labelId='immune'\r\n          >\r\n            <MenuItem value='true'>True</MenuItem>\r\n            <MenuItem value='false'>False</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl required className={classes.textField}>\r\n          <InputLabel id='s_or_c'>sterilized or castrated?</InputLabel>\r\n          <Select\r\n            onChange={handleChange}\r\n            name='sterilized_or_castrated'\r\n            value={sterilized_or_castrated}\r\n            labelId='s_or_c'\r\n          >\r\n            <MenuItem value='true'>True</MenuItem>\r\n            <MenuItem value='false'>False</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField\r\n          className={classes.textField}\r\n          variant='standard'\r\n          margin='normal'\r\n          multiline\r\n          rows={3}\r\n          fullWidth\r\n          label={'Tell us about the pet'}\r\n          name='about'\r\n          type='text'\r\n          onChange={handleChange}\r\n          value={about}\r\n        />\r\n\r\n        <Typography variant='h6' align='center'>\r\n          Your contact info\r\n        </Typography>\r\n\r\n        <TextField\r\n          className={classes.textField}\r\n          variant='standard'\r\n          margin='normal'\r\n          required\r\n          fullWidth\r\n          label='Phone number for contact'\r\n          name='phone'\r\n          type='number'\r\n          onChange={handleChange}\r\n          value={phone}\r\n        />\r\n\r\n        <Button\r\n          type='submit'\r\n          className={classes.submit}\r\n          variant='contained'\r\n          color='primary'\r\n        >\r\n          {laoding ? 'Loading...' : 'Submit'}\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default CreatePost\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  header1: {\r\n    margin: '25px 0 0 0',\r\n    padding: '5px',\r\n    color: '#663399',\r\n  },\r\n\r\n  subHeader: {\r\n    margin: '20px auto',\r\n  },\r\n\r\n  logout: {\r\n    color: '#663399',\r\n    textDecoration: 'underline',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n\r\n  imagesUplaodContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    margin: '20px auto',\r\n  },\r\n\r\n  paginationDiv: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  main: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  table: {\r\n    width: '95%',\r\n    margin: '15px auto',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import {\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@material-ui/core'\r\nimport { FC } from 'react'\r\nimport styles from './styles'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  getPostToUpdate,\r\n  deletePost,\r\n  getPostsByUser,\r\n} from '../../redux/actions/postActions'\r\nimport { resetPostToUpdate, cleanMessage } from '../../redux/reducers/post'\r\n\r\ninterface IPost {\r\n  id: number\r\n  name: string\r\n  createdAt: string\r\n}\r\n\r\ntype Posts = [IPost]\r\n\r\ninterface ITable {\r\n  posts: Posts\r\n  loading: boolean\r\n  message: string | null\r\n}\r\n\r\nconst TableComponent: FC<ITable> = ({ posts, loading, message }) => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleEditClick = (postId: any) => {\r\n    dispatch(resetPostToUpdate())\r\n    dispatch(getPostToUpdate(postId))\r\n  }\r\n\r\n  const handleDelete = (postId: any) => {\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      dispatch(deletePost(postId))\r\n    }\r\n  }\r\n\r\n  if (message === 'Post deleted succefully') {\r\n    dispatch(cleanMessage())\r\n    dispatch(getPostsByUser(1))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <TableContainer className={classes.table} component={Paper}>\r\n        <Table aria-label='customized table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align='left'>Created At</TableCell>\r\n              <TableCell align='left'>Pet's name</TableCell>\r\n              <TableCell align='left'>View and edit</TableCell>\r\n              <TableCell align='left'>Delete</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!loading &&\r\n              posts.length > 0 &&\r\n              posts.map((p, i) => (\r\n                <TableRow>\r\n                  <TableCell align='left'>\r\n                    {moment(p.createdAt).format('MMMM Do YYYY')}\r\n                  </TableCell>\r\n                  <TableCell align='left'>{p.name}</TableCell>\r\n                  <TableCell align='left'>\r\n                    {\r\n                      <Button\r\n                        onClick={() => handleEditClick(p.id)}\r\n                        variant='contained'\r\n                        color='primary'\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align='left'>\r\n                    {\r\n                      <Button\r\n                        onClick={() => handleDelete(p.id)}\r\n                        variant='contained'\r\n                        color='secondary'\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    }\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableComponent\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  textField: {\r\n    maxWidth: '95%',\r\n    width: '350px',\r\n    margin: '10px auto',\r\n  },\r\n\r\n  submit: {\r\n    margin: '15px auto',\r\n    width: '350px',\r\n    maxWidth: '95%',\r\n  },\r\n\r\n  title: {\r\n    margin: '20px 0',\r\n    color: '#663399',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import {\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport styles from './styles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useState } from 'react'\r\nimport { postState, resetPostToUpdate } from '../../redux/reducers/post'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { updatePost } from '../../redux/actions/postActions'\r\n\r\nconst UpdatePost = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const { laoding, postToUpdate } = useSelector(postState)\r\n\r\n  const [values, setValues] = useState({\r\n    id: postToUpdate.id,\r\n    adopted: postToUpdate.adopted,\r\n    name: postToUpdate.name,\r\n    age: postToUpdate.age,\r\n    type: postToUpdate.type,\r\n    location: postToUpdate.location,\r\n    gender: postToUpdate.gender,\r\n    size: postToUpdate.size,\r\n    color: postToUpdate.color,\r\n    immune: postToUpdate.immune,\r\n    sterilized_or_castrated: postToUpdate.sterilized_or_castrated,\r\n    about: postToUpdate.about,\r\n    phone: postToUpdate.phone,\r\n  })\r\n\r\n  const {\r\n    adopted,\r\n    name,\r\n    age,\r\n    type,\r\n    location,\r\n    gender,\r\n    size,\r\n    color,\r\n    immune,\r\n    sterilized_or_castrated,\r\n    about,\r\n    phone,\r\n  } = values\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault()\r\n    dispatch(updatePost(values))\r\n    dispatch(resetPostToUpdate())\r\n  }\r\n\r\n  const handleChange = (e: any) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <FormControl required className={classes.textField}>\r\n          <InputLabel id='adopted'>Already adopted?</InputLabel>\r\n          <Select\r\n            onChange={handleChange}\r\n            value={adopted}\r\n            name='adopted'\r\n            labelId='adopted'\r\n          >\r\n            <MenuItem value='true'>Yes</MenuItem>\r\n            <MenuItem value='false'>No</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField\r\n          className={classes.textField}\r\n          variant='standard'\r\n          margin='normal'\r\n          required\r\n          fullWidth\r\n          label={`Pet's name`}\r\n          name='name'\r\n          value={name}\r\n          autoFocus\r\n          type='text'\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <FormControl required className={classes.textField}>\r\n          <InputLabel id='type'>Select pet type</InputLabel>\r\n          <Select\r\n            onChange={handleChange}\r\n            value={type}\r\n            name='type'\r\n            labelId='type'\r\n          >\r\n            <MenuItem value='cat'>Cat</MenuItem>\r\n            <MenuItem value='dog'>Dog</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl required className={classes.textField}>\r\n          <InputLabel id='location'>Select adoption location</InputLabel>\r\n          <Select\r\n            value={location}\r\n            name='location'\r\n            onChange={handleChange}\r\n            labelId='location'\r\n          >\r\n            <MenuItem value='south'>South</MenuItem>\r\n            <MenuItem value='center'>Center</MenuItem>\r\n            <MenuItem value='north'>North</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField\r\n          className={classes.textField}\r\n          variant='standard'\r\n          margin='normal'\r\n          required\r\n          fullWidth\r\n          label={`Pet's age`}\r\n          name='age'\r\n          value={age}\r\n          type='number'\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <FormControl required className={classes.textField}>\r\n          <InputLabel id='gender'>Select pet gender</InputLabel>\r\n          <Select\r\n            name='gender'\r\n            value={gender}\r\n            onChange={handleChange}\r\n            labelId='gender'\r\n          >\r\n            <MenuItem value='male'>Male</MenuItem>\r\n            <MenuItem value='female'>Female</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl required className={classes.textField}>\r\n          <InputLabel id='location'>Select pet size</InputLabel>\r\n          <Select\r\n            name='size'\r\n            value={size}\r\n            onChange={handleChange}\r\n            labelId='location'\r\n          >\r\n            <MenuItem value='small'>small</MenuItem>\r\n            <MenuItem value='medium'>medium</MenuItem>\r\n            <MenuItem value='large'>large</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField\r\n          className={classes.textField}\r\n          variant='standard'\r\n          margin='normal'\r\n          required\r\n          fullWidth\r\n          label={`Pet's color`}\r\n          name='color'\r\n          type='text'\r\n          onChange={handleChange}\r\n          value={color}\r\n        />\r\n\r\n        <FormControl required className={classes.textField}>\r\n          <InputLabel id='immune'>Immune?</InputLabel>\r\n          <Select\r\n            name='immune'\r\n            value={immune}\r\n            onChange={handleChange}\r\n            labelId='immune'\r\n          >\r\n            <MenuItem value='true'>True</MenuItem>\r\n            <MenuItem value='false'>False</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl required className={classes.textField}>\r\n          <InputLabel id='s_or_c'>sterilized or castrated?</InputLabel>\r\n          <Select\r\n            onChange={handleChange}\r\n            name='sterilized_or_castrated'\r\n            value={sterilized_or_castrated}\r\n            labelId='s_or_c'\r\n          >\r\n            <MenuItem value='true'>True</MenuItem>\r\n            <MenuItem value='false'>False</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField\r\n          className={classes.textField}\r\n          variant='standard'\r\n          margin='normal'\r\n          multiline\r\n          rows={3}\r\n          fullWidth\r\n          label={'Tell us about the pet'}\r\n          name='about'\r\n          type='text'\r\n          onChange={handleChange}\r\n          value={about}\r\n        />\r\n\r\n        <Typography variant='h6' align='center'>\r\n          Your contact info\r\n        </Typography>\r\n\r\n        <TextField\r\n          className={classes.textField}\r\n          variant='standard'\r\n          margin='normal'\r\n          required\r\n          fullWidth\r\n          label='Phone number for contact'\r\n          name='phone'\r\n          type='number'\r\n          onChange={handleChange}\r\n          value={phone}\r\n        />\r\n\r\n        <Button\r\n          type='submit'\r\n          className={classes.submit}\r\n          variant='contained'\r\n          color='primary'\r\n        >\r\n          {laoding ? 'Loading...' : 'Update'}\r\n        </Button>\r\n        <Button\r\n          onClick={() => dispatch(resetPostToUpdate())}\r\n          variant='contained'\r\n          color='secondary'\r\n          className={classes.submit}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default UpdatePost\r\n","import { Grid, Typography } from '@material-ui/core'\r\nimport CreatePost from '../../components/create-post-form/CreatePost'\r\nimport styles from './styles'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { authState } from '../../redux/reducers/auth'\r\nimport { logout } from '../../redux/actions/authActions'\r\nimport { useEffect, useState } from 'react'\r\nimport { postState, resetFilters } from '../../redux/reducers/post'\r\nimport { getPostsByUser } from '../../redux/actions/postActions'\r\nimport TableComponent from '../../components/table-component/TableComponent'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport UpdatePost from '../../components/update-post-form/UpdateForm'\r\n\r\nconst Dashboard = () => {\r\n  const { user } = useSelector(authState)\r\n  const { count, postsByUser, loading, pages, postToUpdate, message } =\r\n    useSelector(postState)\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n\r\n  const [page, setPage] = useState(1)\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  const handlePageChange = (e: any, value: number) => {\r\n    setPage(value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostsByUser(page))\r\n\r\n    return () => {\r\n      dispatch(resetFilters())\r\n    }\r\n  }, [page])\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant='h4' className={classes.header1} align='center'>\r\n        Welcome {user && user.email.split('@')[0]}\r\n      </Typography>\r\n\r\n      <Grid container>\r\n        <Grid item xs={12} sm={4}>\r\n          {!postToUpdate ? (\r\n            <>\r\n              <Typography\r\n                className={classes.subHeader}\r\n                variant='h5'\r\n                align='center'\r\n              >\r\n                Create post\r\n              </Typography>\r\n\r\n              <CreatePost />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Typography\r\n                className={classes.subHeader}\r\n                variant='h5'\r\n                align='center'\r\n              >\r\n                Update post\r\n              </Typography>\r\n\r\n              <UpdatePost />\r\n            </>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={8}>\r\n          <Typography className={classes.subHeader} variant='h5' align='center'>\r\n            Posts history{' '}\r\n            <span onClick={handleLogout} className={classes.logout}>\r\n              /Logout\r\n            </span>\r\n          </Typography>\r\n\r\n          {loading && (\r\n            <Typography\r\n              className={classes.subHeader}\r\n              variant='h5'\r\n              align='center'\r\n            >\r\n              Loading posts...\r\n            </Typography>\r\n          )}\r\n          {!loading && count > 0 && (\r\n            <TableComponent\r\n              posts={postsByUser}\r\n              loading={loading}\r\n              message={message}\r\n            />\r\n          )}\r\n          {!loading && count === 0 && (\r\n            <Typography\r\n              className={classes.subHeader}\r\n              variant='subtitle1'\r\n              align='center'\r\n            >\r\n              You do not have any created posts yet.\r\n            </Typography>\r\n          )}\r\n\r\n          <div className={classes.paginationDiv}>\r\n            <Typography>Page: </Typography>\r\n            <Pagination count={pages} page={page} onChange={handlePageChange} />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import axios from 'axios'\r\naxios.defaults.withCredentials = true\r\nconst server_url = process.env.REACT_APP_SERVER_URL\r\n\r\nexport interface Iobj {\r\n  image: string\r\n  postId: string\r\n}\r\n\r\nexport const uploadImages = async (obj: Iobj) =>\r\n  await axios.post(`${server_url}/upload-images`, obj)\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { uploadImages } from '../api/cloudinary'\r\nimport { Iobj } from '../api/cloudinary'\r\n\r\nexport const addImages = createAsyncThunk(\r\n  'cloudinary/addImages',\r\n  async (obj: Iobj, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await uploadImages(obj)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { addImages } from '../actions/cloudinaryActions'\r\n\r\ninterface stateProps {\r\n  loading: boolean\r\n  error: null | string\r\n  message: null | string\r\n}\r\n\r\nconst initialState: stateProps = {\r\n  loading: false,\r\n  error: null,\r\n  message: null,\r\n}\r\n\r\nexport const cloudinarySlice: any = createSlice({\r\n  name: 'cloudinary',\r\n  initialState,\r\n  reducers: {\r\n    cleanCloudinarySuccess: (state, { payload }) => {\r\n      state.message = null\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      //new upload images\r\n      .addCase(addImages.pending, (state, { payload }) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(addImages.fulfilled, (state, { payload }) => {\r\n        state.loading = false\r\n        state.message = payload.message\r\n        state.error = null\r\n      })\r\n      .addCase(addImages.rejected, (state, action: PayloadAction<any>) => {\r\n        state.loading = false\r\n        state.error = action.payload.message\r\n      })\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { cleanCloudinarySuccess } = cloudinarySlice.actions\r\n\r\nexport const cloudinaryState = (state: any) => state.cloudinary\r\n\r\nexport default cloudinarySlice.reducer\r\n","import { Button, Typography } from '@material-ui/core'\r\nimport { useState } from 'react'\r\nimport styles from './styles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addImages } from '../../redux/actions/cloudinaryActions'\r\nimport Resizer from 'react-image-file-resizer'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { cloudinaryState } from '../../redux/reducers/cloudinary'\r\n\r\ninterface Iparams {\r\n  postId: string\r\n}\r\n\r\nconst UploadImageForm = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const [files, setFiles] = useState([])\r\n  const { postId } = useParams<Iparams>()\r\n\r\n  const { loading, error, message } = useSelector(cloudinaryState)\r\n\r\n  const handleChange = (e: any) => {\r\n    setFiles(e.target.files)\r\n  }\r\n\r\n  const dispatchImageUpload = async (uri: any) => {\r\n    await dispatch(addImages({ image: uri, postId }))\r\n  }\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n\r\n    if (files.length > 4) {\r\n      return\r\n    }\r\n\r\n    if (files) {\r\n      for (let i = 0; i < files.length; i++) {\r\n        Resizer.imageFileResizer(\r\n          files[i],\r\n          500,\r\n          500,\r\n          'auto',\r\n          100,\r\n          0,\r\n          (uri) => {\r\n            dispatchImageUpload(uri)\r\n          },\r\n          'base64'\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const showSuccess = () => {\r\n    if (message) {\r\n      return (\r\n        <p className={classes.title}>\r\n          {message} you can review your post by clicking{' '}\r\n          <Link to={`/adoption/${postId}`}>Here</Link>\r\n        </p>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '500px',\r\n        maxWidth: '95%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'start',\r\n      }}\r\n    >\r\n      <Typography className={classes.title} variant='h5'>\r\n        Your post created succefully, only thing left to do is to upload images.\r\n      </Typography>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          style={{\r\n            fontSize: '15px',\r\n            display: 'flex',\r\n            margin: '20px 0',\r\n          }}\r\n          type='file'\r\n          accept='image/*'\r\n          name='imagetoUpload'\r\n          multiple\r\n          onChange={handleChange}\r\n        />\r\n\r\n        {showSuccess()}\r\n\r\n        <Button\r\n          className={classes.submit}\r\n          color='primary'\r\n          variant='contained'\r\n          type='submit'\r\n        >\r\n          {loading ? 'Loading...' : 'Upload'}\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadImageForm\r\n","import styles from './styles'\r\nimport UploadImageForm from '../../components/create-post-form/UploadImageForm'\r\nimport { cleanCloudinarySuccess } from '../../redux/reducers/cloudinary'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst UploadImages = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(cleanCloudinarySuccess())\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.imagesUplaodContainer}>\r\n        <UploadImageForm />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadImages\r\n","export default __webpack_public_path__ + \"static/media/cat2.096e8e64.jpg\";","export default __webpack_public_path__ + \"static/media/dog2.83caa38a.jpg\";","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  main: {\r\n    width: '1280px',\r\n    maxWidth: '100%',\r\n    margin: '30px auto',\r\n  },\r\n\r\n  desktopImg: {\r\n    maxWidth: '90%',\r\n    height: '500px',\r\n    padding: '3px 0',\r\n    margin: '10px auto',\r\n    border: '2px solid white',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      border: '2px solid #663399',\r\n    },\r\n  },\r\n\r\n  mobileImg: {\r\n    maxWidth: '100%',\r\n    height: '300px',\r\n    padding: '3px 0',\r\n    margin: '10px auto',\r\n  },\r\n\r\n  gridItem: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  Text: {\r\n    margin: '30px auto',\r\n    padding: '5px',\r\n  },\r\n\r\n  link: {\r\n    color: '#663399',\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import cat from '../../images/cat2.jpg'\r\nimport dog from '../../images/dog2.jpg'\r\nimport styles from './styles'\r\nimport { useEffect, useState } from 'react'\r\nimport { Grid, Typography } from '@material-ui/core'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { authState } from '../../redux/reducers/auth'\r\nimport { setQueryType, resetFilters } from '../../redux/reducers/post'\r\n\r\nconst Home = () => {\r\n  const classes = styles()\r\n  const [width, setWidth] = useState(window.innerWidth)\r\n  const { user } = useSelector(authState)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const handleResize = () => {\r\n    setWidth(window.innerWidth)\r\n  }\r\n\r\n  const handleClick = (e: any) => {\r\n    dispatch(resetFilters())\r\n    dispatch(setQueryType(e.target.alt))\r\n    history.push('/adoption')\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [])\r\n\r\n  return (\r\n    <Grid container className={classes.main}>\r\n      <Grid className={classes.gridItem} item xs={12} md={6}>\r\n        <Typography align='center' variant='h4'>\r\n          Adopt a Dog\r\n        </Typography>\r\n\r\n        <img\r\n          className={width > 600 ? classes.desktopImg : classes.mobileImg}\r\n          src={dog}\r\n          alt='dog'\r\n          onClick={handleClick}\r\n        />\r\n      </Grid>\r\n      <Grid className={classes.gridItem} item xs={12} md={6}>\r\n        <Typography align='center' variant='h4'>\r\n          Adopt a Cat\r\n        </Typography>\r\n\r\n        <img\r\n          className={width > 600 ? classes.desktopImg : classes.mobileImg}\r\n          src={cat}\r\n          alt='cat'\r\n          onClick={handleClick}\r\n        />\r\n      </Grid>\r\n\r\n      {!user ? (\r\n        <Typography className={classes.Text} align='center' variant='h6'>\r\n          Would you like to create a new adoption post? Please{' '}\r\n          <Link className={classes.link} to='/login'>\r\n            Login\r\n          </Link>\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.Text} align='center' variant='h6'>\r\n          Hello {user.email.split('@')[0]}, would you like to create a new\r\n          adoption post? click{' '}\r\n          <Link className={classes.link} to={`/dashboard/${user.id}`}>\r\n            Here\r\n          </Link>\r\n        </Typography>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  main: {\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n  },\r\n})\r\n\r\nexport default styles\r\n","import { Switch, Route } from 'react-router-dom'\nimport NavBar from './components/navigation/NavBar'\nimport PrivateRoute from './components/routes/PrivateRoute'\nimport Adoption from './pages/adoption/Adoption'\nimport AdoptionPost from './pages/adoption/AdoptionPost'\nimport Login from './pages/auth/Login'\nimport Register from './pages/auth/Register'\nimport Dashboard from './pages/dashboard/Dashboard'\nimport UploadImages from './pages/dashboard/UploadImages'\nimport Home from './pages/home/Home'\nimport styles from './styles/styles'\nimport { forceLogout } from './redux/reducers/auth'\nimport { postState } from './redux/reducers/post'\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction App() {\n  const classes = styles()\n  const dispatch = useDispatch()\n  const { error } = useSelector(postState)\n\n  if (error === 'Unauthorized') {\n    dispatch(forceLogout())\n  }\n\n  return (\n    <>\n      <NavBar />\n      <Switch>\n        <div className={classes.main}>\n          {/* public routes */}\n          <Route path='/' component={Home} exact />\n          <Route path='/login' component={Login} exact />\n          <Route path='/register' component={Register} exact />\n          <Route path='/adoption' component={Adoption} exact />\n          <Route path='/adoption/:id' component={AdoptionPost} exact />\n\n          {/* private routes */}\n          <PrivateRoute path='/dashboard/:id' component={Dashboard} exact />\n          <PrivateRoute\n            path='/dashboard/upload-image/:postId'\n            component={UploadImages}\n            exact\n          />\n        </div>\n      </Switch>\n    </>\n  )\n}\n\nexport default App\n","import { createMuiTheme } from '@material-ui/core'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#663399',\r\n    },\r\n  },\r\n})\r\n\r\nexport default theme\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport authSlice from './reducers/auth'\r\nimport cloudinarySlice from './reducers/cloudinary'\r\nimport postSlice from './reducers/post'\r\n\r\nexport default configureStore({\r\n  reducer: { auth: authSlice, post: postSlice, cloudinary: cloudinarySlice },\r\n})\r\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './styles/globalStyles.css'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\nimport theme from './styles/theme'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}